# download protected area data for Malta
# (excluding areas represented as point localities)
mlt_raw_pa_data <- wdpa_fetch(c("South Africa", "Namibia"))
# load packages
library(wdpar)
library(dplyr)
library(ggmap)
# download protected area data for Malta
# (excluding areas represented as point localities)
mlt_raw_pa_data <- wdpa_fetch(c("South Africa", "Namibia"))
# download protected area data for Malta
# (excluding areas represented as point localities)
mlt_raw_pa_data <- wdpa_fetch(c("South Africa"))
sa_raw_pa_data <- mlt_raw_pa_data
rm(mlt_raw_pa_data)
sa_raw_pa_data
# reproject data
sa_pa_data <- st_transform(sa_raw_pa_data, 4326)
# download basemap imagery
bg <- get_stamenmap(unname(st_bbox(sa_pa_data)),force = TRUE)
# download basemap imagery
bg <- get_stamenmap(unname(st_bbox(sa_pa_data)),force = TRUE, zoom = 3)
# make map
ggmap(bg) +
geom_sf(aes(fill = NAME), data = sa_pa_data, inherit.aes = FALSE) +
theme(axis.title = element_blank(), legend.position = "bottom")
# plot it
plot(sa_pa_data)
set.seed(123); d = data.frame(long=runif(100,-180,180), lat=runif(100,-90,90))
library(sp)
coordinates(d) = ~long+lat
proj4string(d) = proj4string(sa_pa_data)
over(d,sa_pa_data$WDPAID)
# plot it
plot(sa_pa_data$WDPAID)
## add point count to each polygon
lengths(st_intersects(sa_pa_data$WDPAID, d))
## add point count to each polygon
lengths(st_intersects(sa_pa_data, d))
## add point count to each polygon
d %>% st_set_crs(st_crs(sa_pa_data))
set.seed(123); d = data.frame(long=runif(100,-180,180), lat=runif(100,-90,90))
## add point count to each polygon
d %>% st_set_crs(st_crs(sa_pa_data))
points <- st_multipoint(d)
set.seed(123); d = data.frame(long=runif(100,-180,180), lat=runif(100,-90,90))
points <- st_multipoint(d)
d
p <- rbind(c(3.2,4), c(3,4.6), c(3.8,4.4), c(3.5,3.8), c(3.4,3.6), c(3.9,4.5))
p
class(p)
class(d)
d <- matrix(d)
points <- st_multipoint(d)
d <- matrix(d)
d
set.seed(123); d = data.frame(long=runif(100,-180,180), lat=runif(100,-90,90))
d <- as.matrix(d)
d
points <- st_multipoint(d)
points
## add point count to each polygon
points %>% st_set_crs(st_crs(sa_pa_data))
# create some random data
set.seed(123); d = data.frame(long=runif(100,-180,180), lat=runif(100,-90,90))
pts <- st_as_sf (d, coords = c ("long", "lat"), crs = 4326)
res <- st_intersects (pts, sa_pa_data)
length (unlist (res)) / nrow (pts) # fraction of intersecting points
set.seed(123); d = data.frame(long=runif(1000,-180,180), lat=runif(1000,-90,90))
pts <- st_as_sf (d, coords = c ("long", "lat"), crs = 4326)
res <- st_intersects (pts, sa_pa_data)
length (unlist (res)) / nrow (pts) # fraction of intersecting points
set.seed(123); d = data.frame(long=runif(1000,30,28), lat=runif(1000,-33,-26))
set.seed(123); d = data.frame(long=runif(1000,28,30), lat=runif(1000,-33,-26))
pts <- st_as_sf (d, coords = c ("long", "lat"), crs = 4326)
res <- st_intersects (pts, sa_pa_data)
length (unlist (res)) / nrow (pts) # fraction of intersecting points
d = data.frame(long=runif(1000,28,30), lat=runif(1000,-33,-26))
pts <- st_as_sf (d, coords = c ("long", "lat"), crs = 4326)
res <- st_intersects (pts, sa_pa_data)
length (unlist (res)) / nrow (pts) # fraction of intersecting points
d = data.frame(long=runif(1000,28,30), lat=runif(1000,-33,-26))
pts <- st_as_sf (d, coords = c ("long", "lat"), crs = 4326)
res <- st_intersects (pts, sa_pa_data)
length (unlist (res)) / nrow (pts) # fraction of intersecting points
# load in the tracks
mydata <- read.csv("C:\\Users\\Adam\\Documents\\Science\\Methods & Stats\\GIS\\wdpar\\swazi_reg.csv", header = T, sep = ",")
head(mydata)
sfc = st_sfc(mydata$x_, mydata$y_, crs = 4326)
tail(mydata)
library(trk)
library(amt)
trk <-
mk_track(
mydata,
.x = x_,
.y = y_,
.t = t_,
id = id,
crs = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
)
)  %>%
transform_coords(sp::CRS("+init=epsg:4326"))
head(mydata)
tail(mydata)
mydata$t_<-parse_date_time(x=mydata$t_,c("%Y-%m-%d %H:%M:%S"))
library(lubridate)
mydata$t_<-parse_date_time(x=mydata$t_,c("%Y-%m-%d %H:%M:%S"))
trk <-
mk_track(
mydata,
.x = x_,
.y = y_,
.t = t_,
id = id,
crs = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
)
)  %>%
transform_coords(sp::CRS("+init=epsg:4326"))
head(trk)
trk <- trk %>% select(x_, y_)
trk
pts <- st_as_sf (d, coords = c ("x_", "y_"), crs = 4326)
pts <- st_as_sf (trk, coords = c ("x_", "y_"), crs = 4326)
pts
# count the number of points that overlap with protected areas
res <- st_intersects (pts, sa_pa_data)
# get the proportion of those
length (unlist (res)) / nrow (pts)
res
summary(res)
length (unlist (res))
nrow (pts)
x <- c(1,1,1,2,3,4,5,8,8,8,8.5,9)
hist(x)
density(x)
d <- density(x) # returns the density data
plot(d) # plots the results
?density
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
d2 <- density(x,bw = 4) # returns the density data
plot(d2) # plots the results
d3 <- density(x,bw = 0.1) # returns the density data
plot(d3) # plots the results
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
d2 <- density(x,bw = 4) # returns the density data
plot(d2) # plots the results
d3 <- density(x,bw = 0.1) # returns the density data
plot(d3) # plots the results
par(mfrow=c(2,2))
par(mfrow=c(1,2))
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
d2 <- density(x,bw = 4) # returns the density data
plot(d2) # plots the results
par(mfrow=c(1,2))
hist(x)
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
x <- c(1,1,1,2,3,4,5,8,8,8,8.5,9)
hist(x)
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
par(mfrow=c(1,3))
x <- c(1,1,1,2,3,4,5,8,8,8,8.5,9)
hist(x)
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
d2 <- density(x,bw = 4) # returns the density data
plot(d2) # plots the results
x <- c(1,1,1,2,3,4,5,8,8,8,8.5,9,9,9,9,9)
hist(x)
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
d2 <- density(x,bw = 4) # returns the density data
plot(d2) # plots the results
plot(x)
x <- c(1,1,1,1,1,2,3,4,5,8,8,8,8.5,9,9,9,9,9)
hist(x)
d <- density(x,bw = 1.786) # returns the density data
plot(d) # plots the results
x <- c(1,1,1,2,3,4,5,8,8,8,8.5,9,9,9,9,9)
y <- c(1,1,1,1,1,1,5,8,8,8,8.5,9,9,9,9,9)
hist(y)
d <- density(y,bw = 1.786) # returns the density data
plot(d) # plots the results
d2 <- density(y,bw = 4) # returns the density data
plot(d2) # plots the results
par(mfrow=c(1,3))
y <- c(1,1,1,1,1,1,5,8,8,8,8.5,9,9,9,9,9)
hist(y)
d <- density(y,bw = 1.786) # returns the density data
plot(d) # plots the results
d2 <- density(y,bw = 4) # returns the density data
plot(d2) # plots the results
