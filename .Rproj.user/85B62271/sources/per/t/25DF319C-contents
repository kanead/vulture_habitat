#' clean the Masai Mara data and Extract a file for each bird

rm(list=ls())

setwd("C:\\Users\\Adam Kane\\Documents\\Manuscripts\\VultureMovementData\\VultureMovementData")
library(tidyverse)
library(readxl)

# read_excel reads both xls and xlsx files
mydata<- read_excel("African White-backed Vultures Masai Mara.xlsx",col_names = TRUE)
head(mydata)

#' rename those confusing column names that have hyphens 
names(mydata)[names(mydata) == 'sensor-type'] <- 'sensor'
names(mydata)[names(mydata) == 'location-long'] <- 'long'
names(mydata)[names(mydata) == 'location-lat'] <- 'lat'
names(mydata)[names(mydata) == 'tag-local-identifier'] <- 'id'
names(mydata)[names(mydata) == 'individual-taxon-canonical-name'] <- 'species'
names(mydata)[names(mydata) == 'timestamp'] <- 'time'

#' exclude non GPS sensor types
#' the column header has a hyphen which is a problem with R so I call the column by
#' number directly
mydata <- filter(mydata,sensor=="gps")


#' select only those columns 
mydata <- select(mydata,time,long,lat,id,species)
mydata

#' make species a factor level
mydata$species<-as.factor(mydata$species)
levels(mydata$species)

#' rename the species to something simpler 
mydata<-mutate(mydata, species = fct_recode(species, "wb" = "Gyps africanus"))
mydata<-mutate(mydata, species = fct_recode(species, "rv" = "Gyps rueppellii"))
levels(mydata$species)

#' one id has no species name Baldrick, we need to give this a species name
# Get levels and add "None"
levels <- levels(mydata$species)
levels[length(levels) + 1] <- "vul"

# refactor Species to include "vul" as a factor level
# and replace NA with "vul"
mydata$species <- factor(mydata$species, levels = levels)
mydata$species[is.na(mydata$species)] <- "vul"
levels(mydata$species)

#' add a column name for the study
mydata$study <- "masai"

#' add a column name for the timezone
mydata$gmt <- "q"

#' want columns in this order: time long lat id	species	study	gmt
head(mydata)

#' dates are getting messed up in the export
#' specify their format here
mydata$time <- format(mydata$time, "%d/%m/%Y %H:%M")
head(mydata)

#' group by the id column and export a csv for each
customFun  = function(DF) {
  write.csv(DF,paste0("",unique(DF$id),".csv"),row.names = FALSE)
  return(DF)
}

mydata %>% 
  group_by(id) %>% 
  do(customFun(.))
