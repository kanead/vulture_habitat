hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = "Revisits (radius = 100)"
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' extract one bird
mydata <- mydata %>% filter(id == "#199120029")
#' turn into a move object
mydata <- move(
x = mydata$x_,
y = mydata$y_,
time = as.POSIXct(mydata$t_,
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC"),
data = mydata,
proj = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
),
animal = "ID1",
sensor = "GPS"
)
#' take a look
mydata
head(mydata)
#' calculate the number of recurisons i.e. the revisits to a point based on a radius you choose
x = 1000 #' the size of the radius is in metres so this is 1km
vulturevisit = getRecursions(mydata, x)
#' plot the results
par(mfrow = c(1, 2), mar = c(4, 4, 1, 1))
plot(vulturevisit, mydata)
#' drawCircle(-15, -10, 100) # adds the size of the circle
hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = paste("Revisits (radius = ",x,")")
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' extract one bird
mydata <- mydata %>% filter(id == "#199120029")
#' turn into a move object
mydata <- move(
x = mydata$x_,
y = mydata$y_,
time = as.POSIXct(mydata$t_,
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC"),
data = mydata,
proj = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
),
animal = "ID1",
sensor = "GPS"
)
#' take a look
mydata
head(mydata)
#' calculate the number of recurisons i.e. the revisits to a point based on a radius you choose
x = 1000 #' the size of the radius is in metres so this is 1km
vulturevisit = getRecursions(mydata, x)
#' plot the results
par(mfrow = c(1, 2), mar = c(4, 4, 1, 1))
plot(vulturevisit, mydata)
#' drawCircle(-15, -10, 100) # adds the size of the circle
hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = paste("Revisits (radius = ",x,")")
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' extract one bird
mydata <- mydata %>% filter(id == "#199120029")
#' turn into a move object
mydata <- move(
x = mydata$x_,
y = mydata$y_,
time = as.POSIXct(mydata$t_,
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC"),
data = mydata,
proj = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
),
animal = "ID1",
sensor = "GPS"
)
#' take a look
mydata
head(mydata)
#' calculate the number of recurisons i.e. the revisits to a point based on a radius you choose
x = 324 #' the size of the radius is in metres so this is 1km
vulturevisit = getRecursions(mydata, x)
#' plot the results
par(mfrow = c(1, 2), mar = c(4, 4, 1, 1))
plot(vulturevisit, mydata)
#' drawCircle(-15, -10, 100) # adds the size of the circle
hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = paste("Revisits (radius = ",x,")")
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' extract one bird
mydata <- mydata %>% filter(id == "#199120029")
#' turn into a move object
mydata <- move(
x = mydata$x_,
y = mydata$y_,
time = as.POSIXct(mydata$t_,
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC"),
data = mydata,
proj = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
),
animal = "ID1",
sensor = "GPS"
)
#' take a look
mydata
head(mydata)
#' calculate the number of recurisons i.e. the revisits to a point based on a radius you choose
x = 1000 #' the size of the radius is in metres so this is 1km
vulturevisit = getRecursions(mydata, x)
#' plot the results
par(mfrow = c(1, 2), mar = c(4, 4, 1, 1))
plot(vulturevisit, mydata)
#' drawCircle(-15, -10, 100) # adds the size of the circle
hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = paste("Revisits (radius = ",x,")")
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' extract one bird
mydata <- mydata %>% filter(id == "#959152099")
#' turn into a move object
mydata <- move(
x = mydata$x_,
y = mydata$y_,
time = as.POSIXct(mydata$t_,
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC"),
data = mydata,
proj = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
),
animal = "ID1",
sensor = "GPS"
)
#' take a look
mydata
head(mydata)
#' calculate the number of recurisons i.e. the revisits to a point based on a radius you choose
x = 1000 #' the size of the radius is in metres so this is 1km
vulturevisit = getRecursions(mydata, x)
#' plot the results
par(mfrow = c(1, 2), mar = c(4, 4, 1, 1))
plot(vulturevisit, mydata)
#' drawCircle(-15, -10, 100) # adds the size of the circle
hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = paste("Revisits (radius = ",x,")")
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' extract one bird
mydata <- mydata %>% filter(id == "#623187113")
#' turn into a move object
mydata <- move(
x = mydata$x_,
y = mydata$y_,
time = as.POSIXct(mydata$t_,
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC"),
data = mydata,
proj = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
),
animal = "ID1",
sensor = "GPS"
)
#' take a look
mydata
head(mydata)
#' calculate the number of recurisons i.e. the revisits to a point based on a radius you choose
x = 1000 #' the size of the radius is in metres so this is 1km
vulturevisit = getRecursions(mydata, x)
#' plot the results
par(mfrow = c(1, 2), mar = c(4, 4, 1, 1))
plot(vulturevisit, mydata)
#' drawCircle(-15, -10, 100) # adds the size of the circle
hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = paste("Revisits (radius = ",x,")")
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
head(mydata)
tail(mydata)
#' recurse package to analyze revisitations in animal movement data
#' Corinne data
library(tidyverse)
require(recurse)
require(scales)
require(sp)
require(move)
#' load in the regularised tracks
mydata <-
read_csv("regularised/corinne_tanz_reg.csv", col_names = TRUE)
head(mydata)
#' remove the undeployed tracks highlighted in the master sheet
undeployed <-
c(
"175589",
"175590",
"175591",
"175592",
"175593",
"#109018542",
"#199123449",
"#568291554",
"#623177320",
"623187113",
"#649690680",
"#834449829",
"#834450834",
"#834451702"
)
mydata <- mydata %>% dplyr::filter(!id %in% undeployed)
#' look at the IDs
levels(as.factor(mydata$id))
#' extract one bird
mydata <- mydata %>% filter(id == "#199120029")
#' turn into a move object
mydata <- move(
x = mydata$x_,
y = mydata$y_,
time = as.POSIXct(mydata$t_,
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC"),
data = mydata,
proj = CRS(
"+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
),
animal = "ID1",
sensor = "GPS"
)
#' take a look
mydata
head(mydata)
#' calculate the number of recurisons i.e. the revisits to a point based on a radius you choose
x = 1000 #' the size of the radius is in metres so this is 1km
vulturevisit = getRecursions(mydata, x)
#' plot the results
par(mfrow = c(1, 2), mar = c(4, 4, 1, 1))
plot(vulturevisit, mydata)
#' drawCircle(-15, -10, 100) # adds the size of the circle
hist(
vulturevisit$revisits,
breaks = 20,
main = "",
xlab = paste("Revisits (radius = ",x,")")
)
#' look at some summary statistics
summary(vulturevisit$revisits)
head(vulturevisit$revisitStats)
